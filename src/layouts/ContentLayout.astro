---
import Layout from "./Layout.astro";

interface Props {
    frontmatter: {
        title: string
        description: string
        date: string
    }
}

const {frontmatter} = Astro.props;
---
<Layout title={frontmatter.title}>
    <canvas id="heading-canvas"/>
    <article>
        <h1>{frontmatter.title}</h1>
        <slot/>
    </article>
    <p class="date">{new Date(frontmatter.date).toLocaleDateString(undefined)}</p>
    <div class="author">
        <svg height="20" viewBox="0 0 162 30" fill="none">
            <title>By Fuma Nama</title>
            <path d="M17.4359 3.17183C15.3056 3.83438 13.4796 5.8414 12.3459 7.65786C10.5016 10.6131 8.80907 15.5642 7.64801 18.8483C7.54429 19.5225 7.44219 20.2042 7.33205 20.8795C7.06849 22.4954 6.69043 24.0135 6.12462 25.5512C5.69846 26.7095 5.20209 28.1122 4.27962 28.9873C3.98289 29.2688 3.67271 29.3685 3.29506 29.2243C2.88196 29.0666 2.51209 28.9327 2.21458 28.598C2.06868 28.4339 1.94357 28.1817 1.73781 28.0902C1.68962 28.0688 1.47993 27.562 1.45288 27.4809M17.4359 3.17183C17.4516 3.16697 17.4672 3.16218 17.4829 3.15746C17.6868 3.09608 17.9043 3.05371 18.1315 3.02415M17.4359 3.17183C17.5611 3.15065 17.6853 3.12626 17.8086 3.09825C17.9162 3.07379 18.0238 3.04909 18.1315 3.02415M17.4359 3.17183C16.1093 3.39648 14.6852 3.26109 13.3526 3.26109H9.04466C8.46577 3.26109 8.35909 3.28406 7.91956 3.6608C7.20905 4.26981 6.77864 5.31727 6.51319 6.19227C6.36948 6.666 6.08388 7.29254 6.08388 7.79109M18.1315 3.02415C19.7205 2.81745 21.7844 3.23733 22.9752 2.1656C23.1989 1.96422 23.4045 1.75104 23.6117 1.52903C23.6988 1.43578 23.232 1.64858 23.1824 1.66227C22.6521 1.80857 22.146 2.02989 21.6132 2.1656C20.4605 2.45922 19.2938 2.75503 18.1315 3.02415ZM5.28446 14.9858C6.67121 14.9473 8.05061 14.871 9.44437 14.8526C11.0573 14.8312 12.6387 14.4529 14.2556 14.4529C15.2689 14.4529 16.0953 14.3578 17.0092 14.0532M22.3386 16.0517C21.5594 17.2204 21.2447 18.5774 20.873 19.9155C20.4351 21.4921 19.8769 23.2891 20.1032 24.9488C20.3387 26.6758 21.6045 27.8115 23.5 27.5C25.862 27.1118 26.8798 24.9104 28.0085 23.1045M28.0085 23.1045C28.7354 21.9415 29.282 20.6613 29.9922 19.4776C30.1124 19.2772 30.7069 18.0828 30.9693 18.1156M28.0085 23.1045C27.9395 23.5615 27.755 24.9206 28.0085 25.3189C28.5 26.5 30 26.9918 31.8723 26.1776C33.3115 25.6542 34.0214 23.6584 34.5296 22.373C35.5655 19.7528 36.8384 17.2655 38.1344 14.7786C38.151 14.7466 38.6333 13.8223 38.6969 13.9495C38.7788 14.1132 38.5919 14.8009 38.5785 14.8822C38.4475 15.6772 38.3321 16.4772 38.164 17.2656C37.7545 19.1856 37.0182 21.0068 36.3431 22.8393C36.2775 23.0173 36.2119 23.1959 36.1458 23.3749M36.1458 23.3749C35.6054 24.8401 35.042 26.3323 34.3298 27.7172C33.3803 29.5633 34.6507 26.4909 36.1458 23.3749ZM36.1458 23.3749C36.9573 21.6837 37.8351 19.9796 38.4601 19.0421C39.4642 17.5358 41.2073 16.39 42.9235 15.9111C43.705 15.6929 47.3509 14.6132 47.3303 16.2441C47.3166 17.3245 47.0435 18.2235 46.6367 19.0441M46.6367 19.0441C45.9396 20.4502 45.4393 21.8484 44.5889 23.313C44.5863 23.3176 44.5836 23.3221 44.581 23.3266M46.6367 19.0441C45.5895 20.2362 45.2962 21.8656 44.581 23.3266M46.6367 19.0441C47.0933 18.5243 48 18 48.6896 17.843C49.5 17.5 50.5884 17.5991 51.0138 18.4499C51.398 19.2183 51.1174 20.5636 51.1174 21.4107C51.1174 22.3722 51.0648 23.3524 51.1248 24.3123C51.2689 26.6177 53.5019 26.4981 55 25C56 24 55.7845 23.9217 56.5 23.0059C57.9868 21.1027 59.5973 19.2779 61.3557 17.6172C62.2836 16.7409 63.6757 16.2974 64.879 15.9888C65.5299 15.8219 65.9419 15.8731 66.9419 16.3731C68.2142 16.8731 68.5018 19.4065 67.6474 20.6224C66.703 21.9663 66.2471 23.1019 65.2142 24.3731C64.8731 24.7929 64.1261 25.3487 63.7142 25.6833C57.2142 27.3731 58.7666 20.033 59.1865 19.823M44.581 23.3266C44.3102 23.7955 44.12 24.2493 43.9585 24.7099M44.581 23.3266C44.357 23.7841 44.1495 24.2469 43.9585 24.7099M43.9585 24.7099C43.7771 25.2272 43.6319 25.753 43.449 26.3182C43.3118 26.7423 42.7226 28.3928 43.1455 26.9918C43.3708 26.2454 43.642 25.4773 43.9585 24.7099ZM68.1267 18.5579C68.1267 19.5455 67.4983 21.6683 66.9419 22.4776C66.3677 23.3128 65.4939 23.9953 64.7815 24.7077C64.2684 25.2209 64.2684 25.56 64.2684 26.2657V26.2725C64.2684 26.8437 64.6913 26.9271 65.2142 27.1595C65.8779 27.4545 65.937 27.2955 66.5491 27.1595C67.4166 26.9667 68.6529 26.2304 69.3367 25.6833C70.218 24.9783 71.0394 24.2575 71.9089 23.5356C72.3721 23.1511 72.9353 22.7465 72.9353 22.1418M87.1064 8.66693C87.1064 6.16875 87.4883 3.95872 89.3983 2.2224C90.3921 1.31894 91.1173 1.28262 92.405 1.13955C92.6574 1.11151 93.9016 0.907393 94.0661 1.1816C94.2847 1.54605 94.1138 2.47451 94.1081 2.88472C94.0716 5.5139 93.1479 8.28991 92.3104 10.738C91.5525 12.9534 90.8191 15.1525 90.1457 17.3747M90.1457 17.3747C89.7228 18.7701 89.3236 20.1747 88.9567 21.5981C88.4466 23.5774 88.5956 25.6659 87.7582 27.58C87.7011 27.7106 87.1029 28.807 86.9592 28.789C86.1776 28.6913 88.7732 21.0232 88.9988 20.2944C89.3076 19.2966 89.7058 18.3285 90.1457 17.3747ZM94.0312 4.11256C94.5 4.5 95.3296 5.70529 95.3382 5.77583C95.4953 7.06425 95.3899 8.36501 95.5379 9.65517C95.6959 11.0323 96.1477 12.2391 96.1477 13.7763C96.1477 15.3135 96.7909 21.9158 96.9572 23.0594C97.1531 24.6269 98.2923 25.4513 99.1334 26.6023C99.3424 26.8882 99.8498 28.0941 99.9744 27.1595C100.281 24.863 100.827 22.5962 101.289 20.326C101.693 18.339 102.282 16.5256 103.044 14.6384C104.107 12.0049 104.838 9.25415 105.799 6.58534C106.303 5.18563 106.385 3.46647 107.271 2.32753C107.692 1.78629 108.048 0.845339 108.679 0.529785M109.694 16.1799C108.972 16.8216 108.619 17.7446 108.116 18.6498C107.56 19.6499 107.065 20.6808 106.719 21.7662C106.478 22.5236 106.551 23.31 106.551 24.1003C106.551 25.1748 107.321 26.164 108.349 26.5379C109.89 27.0985 111.298 26.8285 112.603 25.8137C114.5 24.338 115.902 22.0173 117.116 19.9946C118.081 18.3862 117.917 16.7092 117.084 15.042C116.807 14.489 115.328 14.6669 114.814 14.6669C114.027 14.6669 113.289 14.8997 112.5 14.8997C111.755 14.8997 111.337 14.9135 110.715 15.3135C110.392 15.5209 110.034 15.777 109.694 15.9471M115.629 21.8826C115.605 22.3204 115.396 22.715 115.396 23.1628C115.396 23.6932 115.33 24.1909 115.189 24.7016C115.03 25.2787 115.059 25.956 115.719 25.956C116.417 25.956 117.056 26.0723 117.75 26.0723C118.645 26.0723 119.32 25.5545 120.045 25.0831C121.19 24.3386 122.026 22.9495 122.728 21.8179C123.759 20.1576 124.566 18.4052 125.108 16.5355C125.163 16.3435 125.696 14.7529 125.444 15.6885C124.937 17.5692 124.148 19.4043 123.309 21.1685M123.309 21.1685C123.198 21.4013 123.086 21.6329 122.974 21.8632C122.15 23.5565 120.344 28.8728 120.659 27.0163C120.941 25.3559 121.814 23.8165 122.618 22.3611C122.841 21.9578 123.07 21.5595 123.309 21.1685ZM123.309 21.1685C123.854 20.2735 124.452 19.4164 125.146 18.6239C125.758 17.9259 126.347 17.2071 126.976 16.529C127.393 16.0797 128.054 15.9476 128.573 15.6627C129.011 15.4225 131.502 14.1752 131.858 14.6281C132.451 15.3838 132.297 16.4427 132.265 17.3502C132.222 18.5614 131.954 19.6762 131.683 20.8481C131.364 22.2306 130.368 23.4878 129.879 24.8309C129.591 25.6248 129.338 26.4256 129.078 27.2297C129.011 27.4346 128.775 28.014 128.922 27.8569C129.677 27.0523 130.248 25.9546 130.875 25.0508C132.068 23.3323 133.213 21.5889 134.334 19.8265C135.063 18.6815 136.062 17.1606 137.386 16.6972C137.902 16.5165 138.538 16.4178 139.086 16.5549C139.615 16.6871 139.313 18.1367 139.254 18.4429C138.879 20.4077 138.091 22.3986 138.091 24.4171C138.091 25.7667 138.791 26.1445 139.953 26.3956C141.581 26.7476 143.066 25.917 144.078 24.721C144.356 24.3922 144.603 23.5223 144.724 23.1111C144.902 22.512 145.12 21.8934 145.371 21.2933M145.371 21.2933C145.564 20.8355 145.776 20.3883 146.005 19.9688C146.527 19.0102 147.296 18.2007 147.957 17.3308C148.531 16.5757 149.28 15.974 150.078 15.4751C150.763 15.0471 151.39 14.5569 152.121 14.2014C152.746 13.8972 153.456 14.2873 154.08 14.4342C154.807 14.6052 155.235 15.3171 155.406 15.9989C155.935 18.115 154.995 20.0316 154.475 22.0248C154.136 23.3217 153.081 24.2327 152.173 25.1413C151.449 25.8648 150.437 26.4649 149.431 26.6478C148.934 26.7382 147.899 26.7237 147.459 26.4797C147.189 26.3292 146.866 26.2951 146.586 26.1629C146.142 25.9525 146.105 25.5296 145.946 25.0896C145.755 24.5569 145.443 23.9387 145.714 23.3438C145.994 22.7261 145.685 21.841 145.371 21.2933ZM145.371 21.2933C145.35 21.2553 145.328 21.2189 145.306 21.1843M154.5 22.2318C153.937 23.4848 153.996 25.017 154.035 26.3698C154.064 27.3821 156.267 26.4138 156.595 26.1887C157.982 25.2389 159.063 24.5541 159.996 23.0852C160.465 22.3475 161.367 21.1528 161.367 20.2533"
                  stroke="currentColor" stroke-linecap="round"
            />
        </svg>
    </div>
    <a href="/" class="blog-nav-link">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none"
             stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
        >
            <path d="M18 15h-6v4l-7-7 7-7v4h6v6z"/>
        </svg>
        Back to home
    </a>
</Layout>
<style>
    article {
        padding-bottom: 1rem;
        font-size: 1em;
    }

    article h1 {
        font-size: 4em;
        letter-spacing: -0.1em;
        font-weight: 600;
        color: rgb(10, 10, 10);
        margin-top: 0;
        margin-bottom: 2rem;
    }

    .blog-nav-link {
        display: flex;
        flex-direction: row;
        gap: 4px;
        align-items: center;
        text-decoration: none;
        color: rgb(200, 200, 200);
        font-size: 0.7em;
        background-color: rgb(20, 20, 20);
        background-image: linear-gradient(to right top, transparent, rgb(100, 100, 100));
        box-shadow: 0 10px 30px rgb(40, 40, 40), inset 0 0 6px rgba(240, 240, 240, 0.5);
        padding: 1rem 1.2rem;
        margin-top: 1rem;
        border-radius: 24px;
        transition: background-color 300ms;
    }

    .blog-nav-link:hover {
        background-color: rgb(70, 70, 70);
    }

    .blog-nav-link svg {
        width: 18px;
        height: 18px;
    }

    #heading-canvas {
        margin-top: 1rem;
        width: 80%;
        height: 80px;
    }

    .author, .date {
        font-size: 14px;
        font-weight: 600;
        color: rgb(10, 10, 10);
    }
</style>
<script>
    const element = document.getElementById('heading-canvas') as HTMLCanvasElement
    let t = 0;
    const ctx = element.getContext('2d')!;
    const w = element.clientWidth, h = element.clientHeight

    element.width = w * window.devicePixelRatio
    element.height = h * window.devicePixelRatio
    ctx.scale(window.devicePixelRatio, window.devicePixelRatio)

    function render() {
        t++
        ctx.clearRect(0, 0, w, h)
        ctx.beginPath()

        const revealDuration = 100;
        for (let x = 4; x <= Math.min(w, t / revealDuration * w) - 4; x++) {
            const percent = x / w
            const offset = t > revealDuration ? Math.log(t - revealDuration) : 0
            const y = Math.cos(percent * Math.PI * 10 + offset) * (h / 2)
            ctx.lineTo(x, (h + y) / 2)
        }

        ctx.strokeStyle = 'rgb(10,10,10)'
        ctx.lineCap = 'round'
        ctx.stroke()

        if (t - revealDuration > 1000) return;

        requestAnimationFrame(() => render())
    }

    render()
</script>